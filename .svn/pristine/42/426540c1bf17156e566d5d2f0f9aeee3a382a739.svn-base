using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Net.Mail;
using System.Web;

namespace NuPortalWebservice.Common_Library
{

    public class CommonFunctions
    {
        public string connection { get; set; }
        public bool SendEmail(string ToAddress, string CcAddress, string BccAddress, string Subject, string MessageBody)
        {
            MailAddress email;
            string[] AddressArray;
            try
            {
                MailMessage mail = new MailMessage();
                mail.From = new MailAddress("pmoalerts@nuvento.com");
                if (ToAddress != string.Empty)
                {
                    AddressArray = ToAddress.Split(',');
                    foreach (string item in AddressArray)
                    {
                        email = new MailAddress(item);
                        if (!mail.To.Contains(email))
                            mail.To.Add(item);
                    }
                }
                if (CcAddress != string.Empty)
                {
                    AddressArray = CcAddress.Split(',');
                    foreach (string item in AddressArray)
                    {
                        email = new MailAddress(item);
                        if (!mail.CC.Contains(email))
                            mail.CC.Add(item);
                    }
                }
                if (BccAddress != string.Empty)
                {
                    AddressArray = BccAddress.Split(',');
                    foreach (string item in AddressArray)
                    {
                        email = new MailAddress(item);
                        if (!mail.Bcc.Contains(email))
                            mail.Bcc.Add(item);
                    }
                }
                mail.Subject = Subject;
                mail.Body = MessageBody;
                mail.IsBodyHtml = true;
                SmtpClient smtp = new SmtpClient();
                smtp.Host = "smtp.gmail.com";
                smtp.Port = 587;
                smtp.Credentials = new System.Net.NetworkCredential("pmoalerts@nuvento.com", "Portal2017");
                smtp.EnableSsl = true;
                smtp.Send(mail);
                return true;          
            }
            catch (Exception ex)
            {
                return false;       
            }
            finally {
                AddressArray = null;
                email = null;
            }
        }

        public DataTable StringtoDataTable(string JsonData)
        {
            try
            {
                DataTable dtSave = JsonConvert.DeserializeObject<DataTable>(JsonData);
                return dtSave;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
            }
        }

        public bool DeleteRecords(int Id, int Operation)
        {
            SqlConnection con = new SqlConnection();
            try
            {
                con = new SqlConnection();
                connection = ConfigurationManager.ConnectionStrings[Constants.connection].ConnectionString;
                con.ConnectionString = connection;
                SqlCommand cmd = new SqlCommand();
                cmd.Connection = con;
                cmd.CommandText = Constants.EmployeeOperation;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandTimeout = 300;
                con.Open();
                cmd.Parameters.AddWithValue(Constants.paramId, Id);
                cmd.Parameters.AddWithValue(Constants.paramOperId, Operation);
                cmd.ExecuteReader();
            }
            catch (Exception ex)
            {
                return false;
            }
            finally {
                con.Close();
            }
            return true;
        }
        public string BuildXml(string XmlField)
        {
            if (XmlField != string.Empty)
            {
                string[] XmlFieldVals = XmlField.Split('|');
                string XmlData = "<Filter>";
                for (int i = 0; i < XmlFieldVals.Length - 1; i++)
                {
                    XmlData = XmlData + "<Oper><Value>" + XmlFieldVals[i] + "</Value></Oper>";
                }
                XmlData = XmlData + "</Filter>";
                return XmlData;
            }
            else
                return "";
        }
    }
}